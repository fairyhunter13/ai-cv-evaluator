services:
  nginx:
    image: nginx:1.27
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d:ro
      - letsencrypt:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    depends_on:
      app:
        condition: service_started

  certbot:
    image: certbot/certbot:latest
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot-www:/var/www/certbot

  app:
    image: ghcr.io/fairyhunter13/ai-cv-evaluator:latest
    restart: unless-stopped
    env_file:
      - ./.env.production
    environment:
      - APP_ENV=prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
      tika:
        condition: service_healthy

  db:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: app
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - redis_data:/data

  qdrant:
    image: qdrant/qdrant:latest
    environment:
      - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY:-}
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:6333/collections"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - qdrant_data:/qdrant/storage

  tika:
    image: apache/tika:2.9.0.0
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9998/version"]
      interval: 10s
      timeout: 3s
      retries: 10

volumes:
  db_data: {}
  redis_data: {}
  qdrant_data: {}
  letsencrypt: {}
  certbot-www: {}
