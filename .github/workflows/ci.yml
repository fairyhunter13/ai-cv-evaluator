name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.24' ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: true
      - name: Download deps
        run: go mod download
      - name: Tools
        run: make tools
      - name: Lint
        run: make lint
      - name: Vet
        run: make vet
      - name: Security - Vulnerabilities
        run: make vuln
      
      - name: Security - Gosec Static Analysis
        uses: securecodewarrior/github-action-gosec@master
        with:
          args: '-fmt sarif -out gosec-results.sarif ./...'
        continue-on-error: true
      
      - name: Upload Gosec results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: gosec-results.sarif
      
      - name: Security - License Check
        run: |
          go install github.com/fossa-contrib/fossa-cli@latest
          go mod download
          $(go env GOPATH)/bin/fossa analyze
        env:
          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
        continue-on-error: true
      - name: Unit tests + coverage enforcement
        run: make ci-test
      - name: Upload unit coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit-${{ matrix.go }}
          path: coverage.unit.out
      - name: Validate OpenAPI
        run: make openapi-validate
      - name: Build docker image (smoke)
        run: make docker-build-ci TAG=${{ github.sha }}
      
      - name: Production - Multi-arch Build Test
        if: matrix.go == '1.24'
        run: make build-matrix
      - name: Enforce unit test placement
        run: make verify-test-placement
      
      # Run E2E tests only on tag releases
      - name: Setup environment for E2E tests
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}" >> $GITHUB_ENV
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
      
      - name: Run E2E tests (Makefile)
        if: startsWith(github.ref, 'refs/tags/')
        run: make ci-e2e
