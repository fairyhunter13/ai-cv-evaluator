name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.24' ]
    steps:
      - uses: actions/checkout@v4
      - name: Install SOPS and AGE
        run: |
          sudo apt-get update
          sudo apt-get install -y age sops
      - name: Prepare SOPS age key
        if: ${{ secrets.SOPS_AGE_KEY != '' }}
        env:
          SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
        run: |
          mkdir -p ~/.config/sops/age
          printf %s "$SOPS_AGE_KEY" > ~/.config/sops/age/keys.txt
          chmod 600 ~/.config/sops/age/keys.txt
      - name: Decrypt env for CI (.env from secrets/env.sops.yaml)
        if: ${{ secrets.SOPS_AGE_KEY != '' }}
        run: make decrypt-env
      - name: Export .env to job environment
        if: ${{ secrets.SOPS_AGE_KEY != '' }}
        run: |
          while IFS= read -r line; do
            [ -z "$line" ] && continue
            case "$line" in \#*) continue;; esac
            key="${line%%=*}"; val="${line#*=}"; echo "$key=$val" >> $GITHUB_ENV
          done < .env
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: true
      - name: Download deps
        run: go mod download
      - name: Tools
        run: make tools
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Build admin CSS
        run: make build-admin-css
      - name: Verify admin.css exists
        run: |
          test -f internal/adapter/httpserver/static/admin.css || {
            echo "admin.css missing after build-admin-css" >&2; exit 1; }
      - name: Lint
        run: make lint
      - name: Vet
        run: make vet
      - name: Security - Vulnerabilities
        run: make vuln
      
      - name: Security - Gosec (SARIF)
        run: make gosec-sarif
        continue-on-error: true
      
      - name: Upload Gosec results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: gosec-results.sarif
      
      - name: Security - License Check
        run: make license-scan
        env:
          FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
        continue-on-error: true
      - name: Unit tests + coverage enforcement
        run: make ci-test
      - name: Upload unit coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit-${{ matrix.go }}
          path: coverage.unit.out
      - name: Validate OpenAPI
        run: make openapi-validate
      - name: Build docker image (smoke)
        run: make docker-build-ci TAG=${{ github.sha }}
      
      - name: Production - Multi-arch Build Test
        if: matrix.go == '1.24'
        run: make build-matrix
      - name: Enforce unit test placement
        run: make verify-test-placement
      
      # E2E tests on tags are handled in the deploy workflow's e2e-verify job
